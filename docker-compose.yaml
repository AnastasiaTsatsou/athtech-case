services:
  app:
    image: expense-tracker:latest
    build:
      context: .
      dockerfile: Dockerfile.app
    ports:
      - "8000:80"
    depends_on:
      db:
        condition: service_healthy
  db:
    image: expense-db:latest
    build:
      context: .
      dockerfile: Dockerfile.db
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: root
    volumes:
      - ./db_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized"]
      interval: 5s
      timeout: 3s
      retries: 5
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    depends_on:
      - app
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  prometheus-data:
  grafana-data:
